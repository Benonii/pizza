generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id           Int      @id @default(autoincrement())
  admin_name   String
  admin        User     @relation("RestaurantAdmin", fields: [adminId], references: [id])
  adminId      Int
  name         String
  email        String
  password     String
  phone_number String
  location     String
  pizzas       Pizza[]  @relation("RestaurantPizzas")
  toppings     String[]
  admins       User[]
  roles        Role[]   @relation("RestaurantRoles")
  Order        Order[]
  Menu         Menu[]
}

model Menu {
  id            Int        @id @default(autoincrement())
  restaurant_id Int
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])
  pizza_id      Int
}

model Pizza {
  id           Int        @id @default(autoincrement())
  name         String
  price        Decimal    @db.Decimal(10, 2)
  toppings     String[]
  vendor       Restaurant @relation("RestaurantPizzas", fields: [restaurantId], references: [id])
  restaurantId Int
}

model Order {
  id           Int         @id @default(autoincrement())
  user_id      Int
  user         User        @relation(fields: [user_id], references: [id])
  Restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId Int?
  status       String
  toppings     String[]
  quantity     Int
  price        Decimal
}

model User {
  id           Int          @id @default(autoincrement())
  name         String
  email        String       @unique
  password     String
  location     String? // Optional field
  phone_number String? // Optional field
  created_at   DateTime     @default(now())
  Order        Order[]
  restaurants  Restaurant[] @relation("RestaurantAdmin")
  restaurantId Int?
  Restaurant   Restaurant?  @relation(fields: [restaurantId], references: [id])
  roleId       Int?
  role         Role?        @relation("UserRole", fields: [roleId], references: [id]) // Link to the Role model
}

model Role {
  id           Int        @id @default(autoincrement())
  name         String
  created_at   DateTime   @default(now())
  actions      String[]
  restaurant   Restaurant @relation("RestaurantRoles", fields: [restaurantId], references: [id])
  restaurantId Int
  users        User[]     @relation("UserRole") // This creates a relation field for users
}

model Permission {
  id      Int    @id @default(autoincrement())
  name    String
  action  String
  subject String
}
